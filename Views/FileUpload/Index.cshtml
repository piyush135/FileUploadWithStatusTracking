@{
    ViewData["Title"] = "File Upload";
}

<h2>Upload File with Progress</h2>

<form id="uploadForm" enctype="multipart/form-data">
    <div>
        <label for="file">Choose File:</label>
        <input type="file" id="file" name="UploadedFile" />
    </div>
    <div>
        <button type="button" id="uploadButton">Upload</button>
    </div>
</form>

<div id="progressContainer" style="display: none; margin-top: 10px;">
    <label>Uploading...</label>
    <progress id="progressBar" value="0" max="100" style="width: 100%;"></progress>
</div>

<div id="message" style="margin-top: 10px; color: green;"></div>

<h2>File Upload with Tracking</h2>
<!-- File Upload Form -->
<form id="fileUploadForm" method="post" enctype="multipart/form-data" action="/FileUploadTrack/Upload">
    <div>
        <label for="uploadedFile">Select a file:</label>
        <input type="file" id="uploadedFile" name="uploadedFile" required />
    </div>
    <div>
        <button type="submit">Upload</button>
    </div>
</form>

<!-- Status Tracking Section -->
<div id="statusDiv" style="margin-top:20px;">
    <h3>Upload Status</h3>
    <p id="statusText">No file uploaded yet.</p>
</div>


<script>
    document.getElementById('uploadButton').addEventListener('click', function () {
        const fileInput = document.getElementById('file');
        const progressContainer = document.getElementById('progressContainer');
        const progressBar = document.getElementById('progressBar');
        const messageDiv = document.getElementById('message');

        if (!fileInput.files[0]) {
            messageDiv.innerText = "Please select a file.";
            return;
        }

        const formData = new FormData();
        formData.append("UploadedFile", fileInput.files[0]);

        const xhr = new XMLHttpRequest();
        xhr.open("POST", "/FileUpload/Upload", true);

        // Show the progress container
        progressContainer.style.display = "block";

        // Update progress bar
        xhr.upload.onprogress = function (event) {
            if (event.lengthComputable) {
                const percentComplete = Math.round((event.loaded / event.total) * 100);
                progressBar.value = percentComplete;
            }
        };

        // Handle upload completion
        xhr.onload = function () {
            if (xhr.status === 200) {
                const response = JSON.parse(xhr.responseText);
                messageDiv.innerText = response.message;
                progressBar.value = 0; // Reset progress bar
                progressContainer.style.display = "none";
            } else {
                messageDiv.innerText = "Upload failed. Try again.";
                progressContainer.style.display = "none";
            }
        };

        // Handle errors
        xhr.onerror = function () {
            messageDiv.innerText = "An error occurred while uploading the file.";
            progressContainer.style.display = "none";
        };

        // Send the file
        xhr.send(formData);
    });

    const form = document.getElementById("fileUploadForm");

    form.onsubmit = async function (e) {
        e.preventDefault();

        const formData = new FormData(form);

        // Send file to the Upload endpoint
        const response = await fetch("/FileUpload/uploadWithTrack", {
            method: "POST",
            body: formData
        });

        if (response.ok) {
            const result = await response.json();
            const processingId = result.processingId;
            document.getElementById("statusText").textContent = `File uploaded. Tracking ID: ${processingId}`;
            trackStatus(processingId);
        } else {
            document.getElementById("statusText").textContent = "Upload failed.";
        }
    };

    async function trackStatus(processingId) {
        const interval = setInterval(async () => {
            const statusResponse = await fetch(`/FileUpload/Status/${processingId}`);
            if (statusResponse.ok) {
                const statusData = await statusResponse.json();
                document.getElementById("statusText").textContent = `Status: ${statusData.status}`;
                if (statusData.status === "Completed" || statusData.status === "Failed") {
                    clearInterval(interval);
                }
            }
        }, 2000); // Poll every 2 seconds
    }
</script>
